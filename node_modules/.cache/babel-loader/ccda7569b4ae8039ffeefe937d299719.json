{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n})(this, function () {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n\n  function createCommonjsModule(fn) {\n    var module = {\n      exports: {}\n    };\n    return fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n  /**\n   * Helpers\n   */\n\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation,\n    repeatString: repeatString\n  };\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim$1(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item; // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length > bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list\n              itemMatch.splice(i, 2, itemMatch[i] + '\\n' + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else {\n              if ( // different bullet style\n              !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n                addBack = itemMatch.slice(i + 1).join('\\n');\n                list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n                i = l - 1;\n              }\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim$1(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.listItemStart = edit$1(/^( *)(bull)/).replace('bull', block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit$1(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit$1(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit$1(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit$1(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit$1(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit$1(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  var repeatString$1 = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n    /**\n     * Static Lex Method\n     */\n\n\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype; // no need for block level renderers\n\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n  /**\n   * Slugger generates header id\n   */\n\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    try {\n      var tokens = Lexer_1.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n  return marked_1;\n});","map":{"version":3,"sources":["C:/Users/stehe/Documents/Projects/React/Templates/Dashboard/node_modules/marked/lib/marked.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","isArray","done","value","TypeError","next","bind","createCommonjsModule","fn","defaults","getDefaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","splice","push","trim","c","invert","l","suffLen","currChar","substr","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","helpers","defaults$1","rtrim$1","splitCells$1","_escape","findClosingBracket$1","outputLink","cap","link","raw","title","text","type","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer_1","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","nptable","item","header","align","hr","blockquote","list","bull","isordered","ordered","start","loose","items","itemMatch","bcurr","bnext","addBack","istask","ischecked","listItemStart","undefined","task","checked","pre","def","tag","table","lheading","paragraph","inline","inLink","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","Math","min","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","tokens","url","prevCapZero","_backpedal","inlineText","noopTest$1","edit$1","merge$1","_paragraph","_label","_title","bullet","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","defaults$2","block$1","inline$1","repeatString$1","out","charCodeAt","random","Lexer_1","Lexer","create","lex","lexer","lexInline","inlineTokens","blockTokens","top","token","lastToken","errMsg","error","Error","j","k","l2","keepPrevChar","keys","includes","lastIndexOf","_lastToken","_lastToken2","get","defaults$3","cleanUrl$1","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","defaults$4","unescape$1","Parser_1","Parser","textRenderer","parse","parser","parseInline","l3","cell","itemBody","unshift","merge$2","checkSanitizeDeprecation$1","escape$2","defaults$5","callback","err","pending","setTimeout","_tokens","message","setOptions","use","extension","opts","_loop","prop","prevRenderer","_len","args","_key","ret","apply","_loop2","prevTokenizer","_len2","_key2","_iterator","_step","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell","marked_1"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n\n  function createCommonjsModule(fn) {\n    var module = { exports: {} };\n  \treturn fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation,\n    repeatString: repeatString\n  };\n\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim$1(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item; // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length > bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list\n              itemMatch.splice(i, 2, itemMatch[i] + '\\n' + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else {\n              if ( // different bullet style\n              !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n                addBack = itemMatch.slice(i + 1).join('\\n');\n                list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n                i = l - 1;\n              }\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim$1(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.listItemStart = edit$1(/^( *)(bull)/).replace('bull', block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit$1(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit$1(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit$1(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit$1(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit$1(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit$1(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  var repeatString$1 = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    try {\n      var tokens = Lexer_1.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"]},"metadata":{},"sourceType":"script"}